name: Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies # uses custom composite action
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with: # caching is input-param for custom action
          caching: 'false'
      - name: Output information
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cacahe dependencies # uses custom composite action
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cacahe dependencies # uses custom composite action
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    permissions:
      id-token: write # This is required for requesting the JWT from GitHub's OIDC provider
      contents: read  # This is required for actions/checkout below
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls

      - name: Get AWS persmissions
        uses: aws-actions/configure-aws-credentials
        with: # https://github.com/aws-actions/configure-aws-credentials
          role-to-assume: arn:aws:iam::500079396767:role/GithubDemo_MY
          aws-region: us-east-1
          
      - name: Deploy site
        id: deploy
        # uses: ./.github/actions/deploy-s3-javascript
        uses: ./.github/actions/deploy-s3-docker
        
        # THIS WAY OPENS ACCESS TO ALL AWS SERVICES - NOT GOOD!
        # env:
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: elasticbeanstalk-us-east-2-500079396767
          dist-folder: ./dist
          # bucket-region: us-east-2
      - name: Output URL-info
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"

  # information:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: Run Custom Action
  #       uses: ./.github/actions/deploy-s3-javascript 